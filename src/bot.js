// src/bot.js
const { Telegraf } = require('telegraf');
const express = require('express');
const { Pool } = require('pg');
const keepAlive = require('./keepAlive');
const initRoutes = require('./routes');
const { initDb, cleanupOldUserStates } = require("./db");
require('dotenv').config();

const app = express();
const bot = new Telegraf(process.env.BOT_TOKEN);
const db = new Pool({ connectionString: process.env.DATABASE_URL });
const CLEAR_INTERVAL = 24 * 60 * 60 * 1000; // 24 hours in milliseconds

// –û–±–Ω–æ–≤–ª—è–µ–º webhook
const WEBHOOK_PATH = `/bot${process.env.BOT_TOKEN}`;
bot.telegram.setWebhook(`${process.env.WEBHOOK_URL}${WEBHOOK_PATH}`);
app.use(bot.webhookCallback(WEBHOOK_PATH));

// –ü—Ä–æ—Å—Ç–∞—è –∑–∞–≥–ª—É—à–∫–∞ –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏
app.get('/', (_, res) => res.send('üèù –ö–≤–µ—Å—Ç-–±–æ—Ç –∂–∏–≤–æ–π.'));

// Keep-alive + –∑–∞–ø—É—Å–∫ —Å–µ—Ä–≤–µ—Ä–∞
keepAlive(process.env.WEBHOOK_URL);

// –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è
(async () => {
  try {
    await initDb();
    initRoutes(bot, db);
    const PORT = process.env.PORT || 3000;
    app.listen(PORT, () => console.log(`üöÄ QuestBot —Ä–∞–±–æ—Ç–∞–µ—Ç –Ω–∞ –ø–æ—Ä—Ç—É ${PORT}`));
  } catch (err) {
    console.error('‚ùå –û—à–∏–±–∫–∞ –∑–∞–ø—É—Å–∫–∞:', err);
    process.exit(1);
  }
})();

setInterval(async () => {
  try {
    const count = await cleanupOldUserStates();
    console.log(`üßπ –û—á–∏—Å—Ç–∫–∞: ${count} —Å—Ç–∞—Ä—ã—Ö –∑–∞–ø–∏—Å–µ–π —É–¥–∞–ª–µ–Ω–æ.`);
  } catch (err) {
    console.error('‚ùå –û—á–∏—Å—Ç–∫–∞ –Ω–µ —É–¥–∞–ª–∞—Å—å:', err);
  }
}, CLEAR_INTERVAL);